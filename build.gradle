plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'idea'    // IDE 리소스 폴더 자동 인식용
}


/* ───── 공통 변수: 반드시 가장 먼저 선언 ───── */
ext {
    snippetsDir = file("$buildDir/generated-snippets")
    asciidocOutDir = file("$buildDir/docs/asciidoc")
    docsCopyDir = file("$buildDir/generated-resources")
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

configurations {
    asciidoctorExt
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}
/* ───── 테스트 → 스니펫 ───── */
tasks.test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

/* ───── Asciidoctor: HTML 생성 ───── */
tasks.asciidoctor {
    dependsOn tasks.test
    inputs.dir 'src/docs/asciidoc'
    sources {
        include '**/*.adoc'            // ① 모든 .adoc 처리
    }
    outputDir asciidocOutDir
    attributes snippets: snippetsDir,
            revnumber: version,
            revdate: new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("Asia/Seoul"))
    baseDirFollowsSourceFile()
}

/* ───── HTML 복사 ───── */
tasks.register('copyDocs', Copy) {
    dependsOn tasks.asciidoctor
    from(asciidocOutDir) {
        include '**/*.html'           // ④ 모든 .html 복사
        into 'static/docs'
        rename { String fileName ->
            // comment-api.html → etf-api.html 로 통일하고 싶다면 아래와 같이 변경
            fileName.replaceFirst(/^(.+)\.html$/, 'etf-$1.html')
        }
    }
    into docsCopyDir
}

/* ───── 부트 실행/패키징 시 문서 포함 ───── */
tasks.named('bootRun') {
    dependsOn 'copyDocs'
    classpath += files(docsCopyDir)
}

tasks.named('bootJar') {
    dependsOn 'copyDocs'
    from(docsCopyDir) {
        into 'BOOT-INF/classes'
    }
}

/* ───── IDEA 모듈 리소스 폴더 설정 ───── */
idea {
    module {
        resourceDirs += docsCopyDir
    }
}